# $Id: vfu.conf,v 1.15 2008-02-18 21:08:24 sdobrev Exp $
# vfu.conf
# VFU File Manager config file
#
# All lines with first character # or ; are considered comments!
# Comments may start on a separated new line only! (i.e. comment chars must be first in line)
# This file is read-only! vfu never writes to it.
#
# Possible locations for this file are:
#
# $HOME/.vfu/vfu.conf
# $HOME/$RC_PREFIX/vfu/vfu.conf   ( please read CONFIG file )
# /etc/vfu.conf
# /usr/local/etc/vfu.conf
# /usr/local/vfu.conf
######################

# comment out folowing lines to use vfu's internal editor and viewer
# or you can toggle em run-time if you wish so
Browser=less "%f"
Editor=vim "%f"
Diff=diff -u

# list of known archive types, these are just for recognizing
# handling is done via rx_* scripts! but not by VFU itself
#XXX add here - then add it to rx_auto
Archive=*.zip
Archive=*.7z
Archive=*.ZIP
Archive=*.arj
Archive=*.ARJ
Archive=*.k3b
Archive=*.pk3
Archive=*.maff
Archive=*.jar
Archive=*.apk
Archive=*.tar.gz
Archive=*.tgz
Archive=*.tbz
Archive=*.tar.Z
Archive=*.tar.bz2
Archive=*.tar
Archive=*.rar
Archive=*.deb
Archive=*.ftp
Archive=*.rpm
Archive=*.egg
Archive=*.xpi
Archive=*.odt

# if you'd like to restrict VFU when walking the directory tree -- list paths
# here. Note that you usually should add at least `/tmp/' and `/proc/'
# format is `:' separated list of directory prefixes
TrimTree=/dev/:/proc/:/tmp/:/dos/:/a/

###############################################################################################
# user external commands (handlers), format is:
# description,keyname,ext.mask,command
#
# to execute a command VFU will try to match both
# key pressed and current file's extension!
#
# 1. `description' is just free text, keep it small, first letter can be used as menu hotkey
# 2. `keyname' is key you want to bind
# 3. `ext.mask' is dot-separated list of required extensions and/or file type strings
#               or `*' to discard file type and run command for all files
#               (don't be confused with `.**.' which stands for `executable' files)
# 4. `command' is the shell line you want to execute (as on the command prompt for example)
#
# Available keys (keynames) are:
#     ENTER, INSERT, F1..F10, @F1..@F10, #F1..#F10, ^F1..^F10
#     (#=shift, @=alt, ^=ctrl, note: ^KEY and @KEY are not available under Linux)
#
# NOTE: You can use keyname `MENU' to attach this command to the `UserMenu' (key U in vfu)
# NOTE: `file type strings' are the strings that VFU shows in the `TP' column in the file,
#       list. Here is a list of the file type strings:
#         **  -- executable file
#         []  -- directory
#         ->  -- symbolic link
#         <>  -- symbolic link to directory
#         ==  -- block device
#         ++  -- character device
#         ()  -- fifo (pipe)
#         ##  -- socket
#       You can mix file extensions with file type strings in the same mask.
#       There is a special mask called `dotfiles' which will match dotfiles (files named
#       with leading dot -- `.dotname' )
# NOTE: You cannot mask longer extensions like `.tar.gz' for example.
#
# `Command' string (shell line) can contain following macros:
#
#         %f  -- replaced w. current filename (w/o path)
#         %F  -- replaced w. full pathname of the current file
#         %e  -- current file name without extension
#         %E  -- current file extension
#         %s  -- current file size
#         %c  -- current path ( with slash at the end )
#         %C  -- startup path ( with slash at the end )
#         %R  -- re-read directory content after shell
#         %?  -- prompt for user input and replace it in
#         %i  -- simulates DownArrow after execution
#         %n  -- don't clear and redraw screen on user external command
#         %w  -- wait a key after shell. replaced w. `' (i.e. empty string)
#         %x  -- replaced w. `x'.
#         %_  -- use short file names (SFN) for %f and %F (DOS only)
#         %\  -- use backslashes for %f and %F (DOS only)

ux=VIEW pic,INS,.jpg.jpeg.gif.xpm.png.bmp.pnm.tif.tiff.webp.JPG.GIF.XPM.PNG.BMP.TIF.tbn., pqiv -f "%f" & #-l
#ux=VIEW pic,INS,.thm.THM., feh "%F"
#feh -F  "%F" 2>/dev/null &
ux=VIEW doc,INS,.doc.DOC.docx.xls.xlsx.XLS.ppt.PPT.pptx.PPTX.rtf.RTF.odt.odg.ods.sxw.sxc.sxd.,ooffice "%f" 1> /dev/null 2> /dev/null &
ux=VIEW PDF,INS,.pdf.PDF.,pdf "%f" 1> /dev/null 2> /dev/null &
ux=VIEW PS,INS,.ps.,gv "%f"&
ux=VIEW HTML,INS,.htm.html.shtml.,lynx "%F"

ux=VIEW TAR,INS,.gz.,gunzip -c "%f" | tar tvf - | less

ux=run python,INS,.py.,python "%F" %w

##XXX  can not use , inside command !!
##XXX  dirs/types before empty .. pattern !! XXX
#XXX F15 = shift-F3
#XXX F17 = shift-F5

# play media
ux=PLAY Media,INS,.mpg.vob.mpeg.asf.avi.flv.fli.mov.mkv.m2ts.ts.wmv.swf.m4v.mp4.lrf.3gp.webm.iso.,mplayer -zoom -fs "%f"  2> /dev/null
ux=PLAY Media,INS,.mp3.mp36.ac3.m4a.mpc.wav.wv.ogg.wma.flac.aac.ape.mka.,mplayer -novideo -noautosub "%f"  2> /dev/null
ux=PLAY REAL,INS,.rm.,realplay "%f"  1> /dev/null 2> /dev/null &
#ux=PLAY Ape,INS,.ape.,mac "%f" - -d | play -t wav -
ux=PLAY dir,INS,.[].<>., xdotool  getactivewindow set_window --name mplayer ; mplayer -zoom -fs "%f"/*

ux=playends,F1,.flac.wav.mp3.,playendsmplayer --len=15 "%f"
ux=playends,F1,.[].<>.,playendsmplayer --len=15 "%f"/*[3vc]
ux=playend,F2,.flac.wav.mp3.,playendsmplayer --len=15 --nobeg "%f"
ux=playend,F2,.[].<>.,playendsmplayer --len=15 --nobeg "%f"/*[3vc]

ux=info,F4,.mp3.,mp3info -r a -x "%F" %w
ux=info,F4,.flac.FLAC.,metaflac --export-tags-to=- "%F" %w

ux=filmdir,F5,.[].<>.,filmdir.sh "%F" %w
#ux=truncate,F17,.mp3.flac.avi.mkv.,truncate -s 0 "%F"  %R
#ux=nez,F17,.[].<>.,ln -f `echo "%F" | sed "s:/muzika/.*:/muzika/:"`/,nezapisano "%F"/ %R
ux=nez,F17,.[].<>.mpc.mp3.ac3.m4a.wav.ogg.aac.flac.ape.wv.,ln -f `echo "%c" | sed "s:/muzika/.*:/muzika/:"`/?nezapisano "%c" %R

ux=sumtim,F6,.[].<>.mpc.mp3.ac3.m4a.wav.ogg.aac.flac.ape.wv.,sumtim2.py -v "%F" %w
ux=tlf,F18,.[].<>.,ln -f `echo "%F" | sed "s:/muzika/.*:/muzika/:"`/_tlf "%F"/ %R
ux=tlf,F18,.mpc.mp3.ac3.m4a.wav.ogg.aac.flac.ape.wv.,ln -f `echo "%c" | sed "s:/muzika/.*:/muzika/:"`/_tlf "%c" %R

ux=FILE INFO,F8,*,file -L "%f" %w
ux=c5,F20,.[].<>.,ln -f `echo "%F" | sed "s:/muzika/.*:/muzika/:"`/_c5  "%F"/ %R
ux=c5,F20,..mpc.mp3.ac3.m4a.wav.ogg.aac.flac.ape.wv.,ln -f `echo "%c" | sed "s:/muzika/.*:/muzika/:"`/_c5  "%c" %R

#ux=split,F3,.flac.ape.wav.cue.,bash -ci 'any2flacsplit_forall "%c"'
#ux=markdir,F3,.[].<>.,touch "%f"/valid
#ux=markdir,F3,..wav.,touch "%c"/valid %R
ux=radio-rengrupdir,F3,*,make -f ~/src/bin/biblioteka/radio/rendirall.mak -C "%c"/ grupa %R
ux=radio-rengrupdir,F15,*,make -f ~/src/bin/biblioteka/radio/rendirall.mak -C "%c"/ grupachast %R
ux=radio-showpngs,F13,*,pqiv -f ./??/*++.png ./???/*++.png &
#x=radio-showcmps,F15,*,for a in */*.2cmp; do echo && ls -dalF `dirname "$a"`/?.flac && cat "$a" ; done | less %w
ux=radio-showcmps,F16,*,grep -E '(diff|same)' ./??/*.2cmp %w

#ux=radio-ren2are2,F14,*,make -f ~/src/bin/audio/tyrsi/mcmp.mak -C "%c"/ z_are %R

#сочената папка-с-опис + файловете вътре
ux=radio-renall-selected-dir,F9,.[].<>.,rendirall "%f" %R
 ##make -f ~/src/bin/biblioteka/radio/rendirall.mak ..renall DIRARGS_move="%f"  %R
 #файловете в текущата папка-с-опис на сочения файл
 #ux=radio-renfiles-curdir,F9,..flac.wav.cut.size.findm.cmp.cmpar.cmpbr.png.,make -f ~/src/bin/biblioteka/radio/rendirall.mak ..renfiles _DIRARGS_move=.  %R
#всички папки-с-опис-и-*flac,+файловете-им , в текущата папка
ux=radio-renall-dir-all-in-curdir,F7,.[].,rendirall flacopisi1 %R
 ##make -C "%c" -f ~/src/bin/biblioteka/radio/rendirall.mak ..renall  %R
#текущата папка-с-опис + файловете вътре
ux=radio-renall-curdir,F7,..flac.wav.cut.size.findm.cmp.cmpar.cmpbr.png.,rendirall "%c" %R
 ##make -f ~/src/bin/biblioteka/radio/rendirall.mak ..renall _DIRARGS_move="%c --target=%c/.."  %R

ux=radio-okkzapis,F10,.[].<>.,mkdir -p "%f"/ok/ ; pkill -f "^vim -c .*"`echo "%f" | sed "s/[+ ]/./g"`  %R
ux=radio-okkzapis,F10,..flac.wav.cut.size.findm.cmp.cmpar.cmpbr.png.,mkdir -p ./ok/ ; pkill -f "^vim -c .*"`echo "%c" | sed "s/[+ ]/./g"`  %R

ux=radio-delout-r-c,F11,.flac.wav.cut.size.findm.cmp.cmpar.cmpbr.png.,ls *-b.out.* && rm -f *++.png *.cmp *.cmp?r *-[rc].out[-.]*  %R

ux=radio-editzapis,F12,.wav.flac.,myterm vim -c "argdelete *" "%c"_size opis ~/src/gramo/abbr & #"%c"/a &
ux=radio-editzapis-seldir,F12,.[].<>.,myterm vim -c "argdelete *" "%F"/_size "%F"/opis ~/src/gramo/abbr &
ux=radio-editzapis,F12,*,myterm vim -c "argdelete *" "%F" opis ~/src/gramo/abbr &

# edit
ux=EDIT pic,F7,.gif.tiff.jpg.png.,gimp "%f" 2> /dev/null 1> /dev/null %n &
ux=EDIT doc,F7,.doc.DOC.xls.XLS.ppt.PPT.odt.odg.,ooffice "%f" &
ux=EDIT any,F7,*,gvim "%f" &

# following user commands are bound to the UserMenu -- key `u'
# note that instead of keyname there's `menu' string!
# first letter is hotkey!
#
ux=lLocate file,menu,*,locate %? %w
ux=---,menu,*,
ux=dmpdvd:  dvdplay,menu,*,mpdvd "%f"
ux=ompg123: Stop,menu,*,killall -TERM mpg123 1> /dev/null 2> /dev/null &
ux=smpg123: Suspend,menu,*,killall -STOP mpg123 1> /dev/null 2> /dev/null &
ux=cmpg123: Continue,menu,*,killall -CONT mpg123 1> /dev/null 2> /dev/null &
ux=vmpg123: View running/queue,menu,*,ps xeo "%%p %%a" | grep mpg123 | grep -v grep | less
ux=rrendir-opis+flac-radio,menu,*,rendirall flac %w%R
ux=fname=datetime,menu,*,jhead -ni%%Y%%m%%d-%%H%%M%%S--%%f *.jpg %R
ux=radio-ren2are2,menu,*,make -f ~/src/bin/audio/tyrsi/mcmp.mak -C "%c"/ z_are %R
	



# execute all files that have type `**' with ENTER
#ux=EXEC,ENTER,.**.,"%f"
# same as the one before but executes command in background
#ux=EXEC,INSERT,.**.,"%f"&

###############################################################################################
# the `see' file browser/viewer filters
# the format is:
# file-mask,command
# 1. `file-mask' tells which files should be filtered
# 2. `command' is executed and it's output is piped to temporary file which is
#              viewed by the viewer (You have to specify %f in the command)
#
#see=*.[1234567890].gz,man "%F"
#see=*.[1234567890].gz,gzip -dc "%f" | nroff -man -
see=*.gz,gzip -dc "%f"
see=*.bz2,bzip2 -dc "%f"
see=*.bz,bzip2 -dc "%f"
see=*.tbz,tar tvjf "%f"
see=*.tgz,tar tvzf "%f"
see=*.Z,gzip -dc "%f"
#see=*.[1234567890],man "%F"

#lynx -dump "%f"
#see=*.html.gz,(gzip -dc "%f" | elinks -dump -dump-charset 1251 -stdin )
#see=*.htm,elinks -dump  -dump-charset 1251 "%f"
see=*.htm,cat "%f"
see=*.html,cat "%f"
see=*.shtml,cat "%f"

see=*.ogg,filmid.sh "%f"
see=*.wm[av],filmid.sh "%f"
see=*.wav,filmid.sh "%f"
see=*.wv,filmid.sh "%f"
see=*.mpc,filmid.sh "%f"
see=*.mp3,eyeD3 --no-color "%f"
see=*.mp36,eyeD3 --no-color "%f"
see=*.ac3,filmid.sh "%f"
see=*.avi,filmid.sh "%f"
see=*.AVI,filmid.sh "%f"
see=*.asf,filmid.sh "%f"
see=*.flv,filmid.sh "%f"
see=*.fli,filmid.sh "%f"
see=*.mov,filmid.sh "%f"
see=*.MOV,filmid.sh "%f"
see=*.m2ts,filmid.sh "%f"
#see=*.ts,filmid.sh "%f"  #but also typescript
see=*.mk[av],filmid.sh "%f"
see=*.m4[av],filmid.sh "%f"
see=*.[mM][pP]4,filmid.sh "%f"
see=*.[lL][rR][fF],filmid.sh "%f"
see=*.3gp,filmid.sh "%f"
see=*.webm,filmid.sh "%f"
see=*.swf,filmid.sh "%f"
see=*.mpg,filmid.sh "%f"
see=*.mpeg,filmid.sh "%f"
see=*.vob,filmid.sh "%f"
see=*.flac,filmid.sh "%f"
see=*.aac,filmid.sh "%f"
see=*.ape,filmid.sh "%f"
see=*.png,file -L "%f"
see=*.pnm,pnmfile "%f"
see=*.jpg,jhead "%f"
see=*.[Cc][Rr]2,dcraw -i -v "%f"
see=*.JPG,jhead "%f"
see=*.jpeg,jhead "%f"
see=*.tbn,jhead "%f"
see=*.torrent,btshowmetainfo "%f"
see=*.torrent.added,btshowmetainfo "%f"

# this is a hack to view Qt man pages
#see=*.[1234567890][a-zA-Z]t?,man "%F"

###############################################################################################
# external panelizers -- added to RescanMenu ( key ALT+R )
# first letter is hotkey!
# format is:
# description,command
# 1. `description' is free text describing panelizer command
# 2. `command' is processed just like any other external command, so
#              you can use the shell-macros described above. Note that
#              first letter of description is used for menu hotkey!
#
panelize=xExternal panelize command,%?
panelize=yFind all symlink files...,find . -type l
panelize=lLocate file,locate %?

###############################################################################################
# directory bookmarks -- press ALT+2 to change current dir to `/tmp' etc...
#
bookmark1=/tmp/
bookmark2=/usr/src/

###############################################################################################
# file extensions colors, format is .ext.ext.ext....ext.
# NOTE: this is extensions list, use dots to separate and at the end
#  BLUE/RED/GREED/MAGENTA/WHITE/YELLOW
#  cXXX or chXXX

#dir - hardcoded!
cCYAN=.[].<>.
#exe
cGREEN=.**.
#media
cMAGENTA=.jpg.jpeg.gif.tiff.xpm.png.bmp.pnm.tif.webp.mov.MOV.asf.avi.AVI.mkv.m2ts.mpg.mpeg.fli.flv.wmv.swf.m4v.mp4.lrf.3gp.webm.raw.nef.wav.mp3.m4a.mpc.ogg.aac.flac.ape.wv.mka.3gp.
#link
chBLUE=.->.
#cRED=.dotfiles.
#archive
cRED=.uc2.zip.arj.tgz.tar.rar.lzh.j.ha.lim.gz.Z.bz2.tbz.deb.rpm.
#compiled/intermediate
chBLACK=.pyc.obj.o.a.lo.la.
#pipes etc
chYELLOW=.==.++.().##.

###############################################################################################
# EOF vfu.conf
###############################################################################################

